{"creation_time": "2023-10-15T20:50:05+00:00", "days_back": 7, "models": {"model.genesis.TL_CUSTOMERS": {"name": "TL_CUSTOMERS", "unique_id": "model.genesis.TL_CUSTOMERS", "owners": [], "tags": ["compute_data"], "package_name": "genesis", "description": "TL for customers table", "full_path": "models/compute/TL_CUSTOMERS.sql", "meta": {}, "database_name": "GENESIS_UAT", "schema_name": "CMP_GENESIS", "table_name": "TL_CUSTOMERS", "model_name": "TL_CUSTOMERS", "normalized_full_path": "genesis/models/compute/TL_CUSTOMERS.sql", "fqn": "genesis_uat.cmp_genesis.tl_customers", "artifact_type": "model"}, "model.genesis.TL_PAYMENTS": {"name": "TL_PAYMENTS", "unique_id": "model.genesis.TL_PAYMENTS", "owners": [], "tags": ["compute_data"], "package_name": "genesis", "description": "TL for payments table", "full_path": "models/compute/TL_PAYMENTS.sql", "meta": {}, "database_name": "GENESIS_UAT", "schema_name": "CMP_GENESIS", "table_name": "TL_PAYMENTS", "model_name": "TL_PAYMENTS", "normalized_full_path": "genesis/models/compute/TL_PAYMENTS.sql", "fqn": "genesis_uat.cmp_genesis.tl_payments", "artifact_type": "model"}, "model.genesis.DIM_CUSTOMERS": {"name": "DIM_CUSTOMERS", "unique_id": "model.genesis.DIM_CUSTOMERS", "owners": [], "tags": ["published_data"], "package_name": "genesis", "description": "Dimension table of CUSTOMER entity. Contains all the information about customers.", "full_path": "models/published/domain_customer/DIM_CUSTOMERS.sql", "meta": {}, "database_name": "GENESIS_UAT", "schema_name": "PBL_GENESIS", "table_name": "DIM_CUSTOMERS", "model_name": "DIM_CUSTOMERS", "normalized_full_path": "genesis/models/published/domain_customer/DIM_CUSTOMERS.sql", "fqn": "genesis_uat.pbl_genesis.dim_customers", "artifact_type": "model"}, "model.genesis.R_CUSTOMER_RETENTION": {"name": "R_CUSTOMER_RETENTION", "unique_id": "model.genesis.R_CUSTOMER_RETENTION", "owners": [], "tags": ["published_data"], "package_name": "genesis", "description": "Report of customer retention need of action.", "full_path": "models/published/domain_customer/reports_account_management/R_CUSTOMER_RETENTION.sql", "meta": {}, "database_name": "GENESIS_UAT", "schema_name": "PBL_GENESIS", "table_name": "R_CUSTOMER_RETENTION", "model_name": "R_CUSTOMER_RETENTION", "normalized_full_path": "genesis/models/published/domain_customer/reports_account_management/R_CUSTOMER_RETENTION.sql", "fqn": "genesis_uat.pbl_genesis.r_customer_retention", "artifact_type": "model"}, "model.genesis.FACT_PAYMENTS": {"name": "FACT_PAYMENTS", "unique_id": "model.genesis.FACT_PAYMENTS", "owners": [], "tags": ["published_data"], "package_name": "genesis", "description": "Fact table containing all the payments.", "full_path": "models/published/domain_finance/FACT_PAYMENTS.sql", "meta": {}, "database_name": "GENESIS_UAT", "schema_name": "PBL_GENESIS", "table_name": "FACT_PAYMENTS", "model_name": "FACT_PAYMENTS", "normalized_full_path": "genesis/models/published/domain_finance/FACT_PAYMENTS.sql", "fqn": "genesis_uat.pbl_genesis.fact_payments", "artifact_type": "model"}, "model.genesis.SL_CUSTOMERS": {"name": "SL_CUSTOMERS", "unique_id": "model.genesis.SL_CUSTOMERS", "owners": [], "tags": ["staging_data"], "package_name": "genesis", "description": "SL for customers source table", "full_path": "models/staging/SL_CUSTOMERS.sql", "meta": {}, "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "model_name": "SL_CUSTOMERS", "normalized_full_path": "genesis/models/staging/SL_CUSTOMERS.sql", "fqn": "genesis_uat.stg_genesis.sl_customers", "artifact_type": "model"}, "model.genesis.SL_ORDERS": {"name": "SL_ORDERS", "unique_id": "model.genesis.SL_ORDERS", "owners": [], "tags": ["staging_data"], "package_name": "genesis", "description": "SL for orders source table.", "full_path": "models/staging/SL_ORDERS.sql", "meta": {}, "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_ORDERS", "model_name": "SL_ORDERS", "normalized_full_path": "genesis/models/staging/SL_ORDERS.sql", "fqn": "genesis_uat.stg_genesis.sl_orders", "artifact_type": "model"}, "model.genesis.SL_PAYMENTS": {"name": "SL_PAYMENTS", "unique_id": "model.genesis.SL_PAYMENTS", "owners": [], "tags": ["staging_data"], "package_name": "genesis", "description": "SL for payments source table. This is an INCREMENTAL model.", "full_path": "models/staging/SL_PAYMENTS.sql", "meta": {}, "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_PAYMENTS", "model_name": "SL_PAYMENTS", "normalized_full_path": "genesis/models/staging/SL_PAYMENTS.sql", "fqn": "genesis_uat.stg_genesis.sl_payments", "artifact_type": "model"}, "model.genesis.TL_ORDERS": {"name": "TL_ORDERS", "unique_id": "model.genesis.TL_ORDERS", "owners": [], "tags": ["compute_data"], "package_name": "genesis", "description": "TL for orders table", "full_path": "models/compute/TL_ORDERS.py", "meta": {}, "database_name": "GENESIS_UAT", "schema_name": "CMP_GENESIS", "table_name": "TL_ORDERS", "model_name": "TL_ORDERS", "normalized_full_path": "genesis/models/compute/TL_ORDERS.py", "fqn": "genesis_uat.cmp_genesis.tl_orders", "artifact_type": "model"}, "source.genesis.Jaffle_shop.VW_RAW_CUSTOMERS": {"name": "VW_RAW_CUSTOMERS", "unique_id": "source.genesis.Jaffle_shop.VW_RAW_CUSTOMERS", "owners": [], "tags": [], "package_name": "genesis", "description": "", "full_path": "models/staging/01_SL_Jaffle_shop.yml", "meta": {}, "source_name": "Jaffle_shop", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "VW_RAW_CUSTOMERS", "model_name": "VW_RAW_CUSTOMERS", "normalized_full_path": "genesis/models/staging/01_SL_Jaffle_shop.sql", "fqn": "genesis_uat.stg_genesis.vw_raw_customers", "artifact_type": "source"}, "source.genesis.Jaffle_shop.VW_RAW_ORDERS": {"name": "VW_RAW_ORDERS", "unique_id": "source.genesis.Jaffle_shop.VW_RAW_ORDERS", "owners": [], "tags": [], "package_name": "genesis", "description": "", "full_path": "models/staging/01_SL_Jaffle_shop.yml", "meta": {}, "source_name": "Jaffle_shop", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "VW_RAW_ORDERS", "model_name": "VW_RAW_ORDERS", "normalized_full_path": "genesis/models/staging/01_SL_Jaffle_shop.sql", "fqn": "genesis_uat.stg_genesis.vw_raw_orders", "artifact_type": "source"}, "source.genesis.Jaffle_shop.VW_RAW_PAYMENTS": {"name": "VW_RAW_PAYMENTS", "unique_id": "source.genesis.Jaffle_shop.VW_RAW_PAYMENTS", "owners": [], "tags": [], "package_name": "genesis", "description": "", "full_path": "models/staging/01_SL_Jaffle_shop.yml", "meta": {}, "source_name": "Jaffle_shop", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "VW_RAW_PAYMENTS", "model_name": "VW_RAW_PAYMENTS", "normalized_full_path": "genesis/models/staging/01_SL_Jaffle_shop.sql", "fqn": "genesis_uat.stg_genesis.vw_raw_payments", "artifact_type": "source"}}, "groups": {"dbt": {"genesis": {"models": {"compute": {"__files__": [{"node_id": "model.genesis.TL_CUSTOMERS", "resource_type": "model"}, {"node_id": "model.genesis.TL_PAYMENTS", "resource_type": "model"}]}, "published": {"domain_customer": {"__files__": [{"node_id": "model.genesis.DIM_CUSTOMERS", "resource_type": "model"}], "reports_account_management": {"__files__": [{"node_id": "model.genesis.R_CUSTOMER_RETENTION", "resource_type": "model"}]}}, "domain_finance": {"__files__": [{"node_id": "model.genesis.FACT_PAYMENTS", "resource_type": "model"}]}}, "staging": {"__files__": [{"node_id": "model.genesis.SL_CUSTOMERS", "resource_type": "model"}, {"node_id": "model.genesis.SL_ORDERS", "resource_type": "model"}, {"node_id": "model.genesis.SL_PAYMENTS", "resource_type": "model"}, {"node_id": "source.genesis.Jaffle_shop.VW_RAW_CUSTOMERS", "resource_type": "source"}, {"node_id": "source.genesis.Jaffle_shop.VW_RAW_ORDERS", "resource_type": "source"}, {"node_id": "source.genesis.Jaffle_shop.VW_RAW_PAYMENTS", "resource_type": "source"}]}}}}, "tags": {"compute_data": [{"node_id": "model.genesis.TL_CUSTOMERS", "resource_type": "model"}, {"node_id": "model.genesis.TL_PAYMENTS", "resource_type": "model"}, {"node_id": "model.genesis.TL_ORDERS", "resource_type": "model"}], "published_data": [{"node_id": "model.genesis.DIM_CUSTOMERS", "resource_type": "model"}, {"node_id": "model.genesis.R_CUSTOMER_RETENTION", "resource_type": "model"}, {"node_id": "model.genesis.FACT_PAYMENTS", "resource_type": "model"}], "staging_data": [{"node_id": "model.genesis.SL_CUSTOMERS", "resource_type": "model"}, {"node_id": "model.genesis.SL_ORDERS", "resource_type": "model"}, {"node_id": "model.genesis.SL_PAYMENTS", "resource_type": "model"}], "No tags": [{"node_id": "source.genesis.Jaffle_shop.VW_RAW_CUSTOMERS", "resource_type": "source"}, {"node_id": "source.genesis.Jaffle_shop.VW_RAW_ORDERS", "resource_type": "source"}, {"node_id": "source.genesis.Jaffle_shop.VW_RAW_PAYMENTS", "resource_type": "source"}]}, "owners": {"No owners": [{"node_id": "model.genesis.TL_CUSTOMERS", "resource_type": "model"}, {"node_id": "model.genesis.TL_PAYMENTS", "resource_type": "model"}, {"node_id": "model.genesis.DIM_CUSTOMERS", "resource_type": "model"}, {"node_id": "model.genesis.R_CUSTOMER_RETENTION", "resource_type": "model"}, {"node_id": "model.genesis.FACT_PAYMENTS", "resource_type": "model"}, {"node_id": "model.genesis.SL_CUSTOMERS", "resource_type": "model"}, {"node_id": "model.genesis.SL_ORDERS", "resource_type": "model"}, {"node_id": "model.genesis.SL_PAYMENTS", "resource_type": "model"}, {"node_id": "model.genesis.TL_ORDERS", "resource_type": "model"}, {"node_id": "source.genesis.Jaffle_shop.VW_RAW_CUSTOMERS", "resource_type": "source"}, {"node_id": "source.genesis.Jaffle_shop.VW_RAW_ORDERS", "resource_type": "source"}, {"node_id": "source.genesis.Jaffle_shop.VW_RAW_PAYMENTS", "resource_type": "source"}]}}, "invocation": {"invocation_id": null, "detected_at": null, "command": null, "selected": null, "full_refresh": null, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}, "test_results": {"model.genesis.SL_ORDERS": [{"metadata": {"test_unique_id": "test.genesis.accepted_values_SL_ORDERS_status__completed__returned__return_pending__placed__shipped.3cde5df6a7", "elementary_unique_id": "test.genesis.accepted_values_SL_ORDERS_status__completed__returned__return_pending__placed__shipped.3cde5df6a7.status.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_ORDERS", "column_name": "status", "test_name": "accepted_values", "test_display_name": "Accepted Values", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_ORDERS", "table_unique_id": "genesis_uat.stg_genesis.sl_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from GENESIS_UAT.STG_GENESIS.SL_ORDERS\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','returned','return_pending','placed','shipped'\n)", "test_params": {"values": ["completed", "returned", "return_pending", "placed", "shipped"], "column_name": "status", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from GENESIS_UAT.STG_GENESIS.SL_ORDERS\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','returned','return_pending','placed','shipped'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["completed", "returned", "return_pending", "placed", "shipped"], "column_name": "status", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}}}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.genesis.not_null_SL_ORDERS_order_id.d3391a078c", "elementary_unique_id": "test.genesis.not_null_SL_ORDERS_order_id.d3391a078c.order_id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_ORDERS", "column_name": "order_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_ORDERS", "table_unique_id": "genesis_uat.stg_genesis.sl_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select order_id\nfrom GENESIS_UAT.STG_GENESIS.SL_ORDERS\nwhere order_id is null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select order_id\nfrom GENESIS_UAT.STG_GENESIS.SL_ORDERS\nwhere order_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.genesis.unique_SL_ORDERS_order_id.456ac8c22b", "elementary_unique_id": "test.genesis.unique_SL_ORDERS_order_id.456ac8c22b.order_id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_ORDERS", "column_name": "order_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_ORDERS", "table_unique_id": "genesis_uat.stg_genesis.sl_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_ORDERS\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_ORDERS\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.genesis.SL_CUSTOMERS": [{"metadata": {"test_unique_id": "test.genesis.dbt_expectations_expect_column_value_lengths_to_be_between_SL_CUSTOMERS_last_name__2.1cbdd9b0f3", "elementary_unique_id": "test.genesis.dbt_expectations_expect_column_value_lengths_to_be_between_SL_CUSTOMERS_last_name__2.1cbdd9b0f3.last_name.expectation", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "column_name": "last_name", "test_name": "expect_column_value_lengths_to_be_between", "test_display_name": "Expect Column Value Lengths To Be Between", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_CUSTOMERS", "table_unique_id": "genesis_uat.stg_genesis.sl_customers", "test_type": "dbt_test", "test_sub_type": "expectation", "test_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        last_name\n    ) >= 2\n)\n as expression\n\n\n    from GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors", "test_params": {"min_value": 2, "column_name": "last_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}, "test_created_at": null, "description": "Expect column entries to be strings with length between a min_value value and a max_value value (inclusive).", "result": {"result_description": null, "result_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        last_name\n    ) >= 2\n)\n as expression\n\n\n    from GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "expect_column_value_lengths_to_be_between", "test_params": {"min_value": 2, "column_name": "last_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}}}, "test_results": {"display_name": "expect_column_value_lengths_to_be_between", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.genesis.not_null_SL_CUSTOMERS_first_name.4cadfb01b0", "elementary_unique_id": "test.genesis.not_null_SL_CUSTOMERS_first_name.4cadfb01b0.first_name.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "column_name": "first_name", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_CUSTOMERS", "table_unique_id": "genesis_uat.stg_genesis.sl_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select first_name\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere first_name is null", "test_params": {"column_name": "first_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select first_name\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere first_name is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "first_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.genesis.not_null_SL_CUSTOMERS_id.0d1c8aa820", "elementary_unique_id": "test.genesis.not_null_SL_CUSTOMERS_id.0d1c8aa820.id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_CUSTOMERS", "table_unique_id": "genesis_uat.stg_genesis.sl_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.genesis.not_null_SL_CUSTOMERS_last_name.16dabb7683", "elementary_unique_id": "test.genesis.not_null_SL_CUSTOMERS_last_name.16dabb7683.last_name.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "column_name": "last_name", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_CUSTOMERS", "table_unique_id": "genesis_uat.stg_genesis.sl_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select last_name\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere last_name is null", "test_params": {"column_name": "last_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select last_name\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere last_name is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "last_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.genesis.unique_SL_CUSTOMERS_id.71b924c53f", "elementary_unique_id": "test.genesis.unique_SL_CUSTOMERS_id.71b924c53f.id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_CUSTOMERS", "table_unique_id": "genesis_uat.stg_genesis.sl_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere id is not null\ngroup by id\nhaving count(*) > 1", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere id is not null\ngroup by id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.genesis.SL_PAYMENTS": [{"metadata": {"test_unique_id": "test.genesis.dbt_expectations_expect_column_values_to_be_between_SL_PAYMENTS_amount__0.8941461226", "elementary_unique_id": "test.genesis.dbt_expectations_expect_column_values_to_be_between_SL_PAYMENTS_amount__0.8941461226.amount.expectation", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_PAYMENTS", "column_name": "amount", "test_name": "expect_column_values_to_be_between", "test_display_name": "Expect Column Values To Be Between", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_PAYMENTS", "table_unique_id": "genesis_uat.stg_genesis.sl_payments", "test_type": "dbt_test", "test_sub_type": "expectation", "test_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and amount >= 0\n)\n as expression\n\n\n    from GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors", "test_params": {"min_value": 0, "column_name": "amount", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}, "test_created_at": null, "description": "Expect each column value to be between two values.", "result": {"result_description": null, "result_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and amount >= 0\n)\n as expression\n\n\n    from GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "expect_column_values_to_be_between", "test_params": {"min_value": 0, "column_name": "amount", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}}}, "test_results": {"display_name": "expect_column_values_to_be_between", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.genesis.not_null_SL_PAYMENTS_id.6c9af60233", "elementary_unique_id": "test.genesis.not_null_SL_PAYMENTS_id.6c9af60233.id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_PAYMENTS", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_PAYMENTS", "table_unique_id": "genesis_uat.stg_genesis.sl_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.genesis.unique_SL_PAYMENTS_id.d72e101596", "elementary_unique_id": "test.genesis.unique_SL_PAYMENTS_id.d72e101596.id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_PAYMENTS", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_PAYMENTS", "table_unique_id": "genesis_uat.stg_genesis.sl_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\nwhere id is not null\ngroup by id\nhaving count(*) > 1", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\nwhere id is not null\ngroup by id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.genesis.R_CUSTOMER_RETENTION": [{"metadata": {"test_unique_id": "test.genesis.dbt_expectations_expect_table_columns_to_contain_set_R_CUSTOMER_RETENTION_customer_id__first_name__last_name__customer_lifetime_value__days_since_last_order__urgency__upper.dd8fe52e54", "elementary_unique_id": "test.genesis.dbt_expectations_expect_table_columns_to_contain_set_R_CUSTOMER_RETENTION_customer_id__first_name__last_name__customer_lifetime_value__days_since_last_order__urgency__upper.dd8fe52e54.None.expectation", "database_name": "GENESIS_UAT", "schema_name": "PBL_GENESIS", "table_name": "R_CUSTOMER_RETENTION", "column_name": null, "test_name": "expect_table_columns_to_contain_set", "test_display_name": "Expect Table Columns To Contain Set", "latest_run_time": "2023-10-15T22:12:53+02:00", "latest_run_time_utc": "2023-10-15T20:12:53+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.R_CUSTOMER_RETENTION", "table_unique_id": "genesis_uat.pbl_genesis.r_customer_retention", "test_type": "dbt_test", "test_sub_type": "expectation", "test_query": "with relation_columns as (\n\n        \n        select cast('CUSTOMER_ID' as TEXT) as relation_column\n        union all\n        \n        select cast('FIRST_NAME' as TEXT) as relation_column\n        union all\n        \n        select cast('LAST_NAME' as TEXT) as relation_column\n        union all\n        \n        select cast('CUSTOMER_LIFETIME_VALUE' as TEXT) as relation_column\n        union all\n        \n        select cast('DAYS_SINCE_LAST_ORDER' as TEXT) as relation_column\n        union all\n        \n        select cast('URGENCY' as TEXT) as relation_column\n        \n        \n    ),\n    input_columns as (\n\n        \n        select cast('CUSTOMER_ID' as TEXT) as input_column\n        union all\n        \n        select cast('FIRST_NAME' as TEXT) as input_column\n        union all\n        \n        select cast('LAST_NAME' as TEXT) as input_column\n        union all\n        \n        select cast('CUSTOMER_LIFETIME_VALUE' as TEXT) as input_column\n        union all\n        \n        select cast('DAYS_SINCE_LAST_ORDER' as TEXT) as input_column\n        union all\n        \n        select cast('URGENCY' as TEXT) as input_column\n        \n        \n    )\n    select *\n    from\n        input_columns i\n        left join\n        relation_columns r on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        r.relation_column is null", "test_params": {"column_list": ["customer_id", "first_name", "last_name", "customer_lifetime_value", "days_since_last_order", "urgency"], "transform": "upper", "model": "{{ get_where_subquery(ref('R_CUSTOMER_RETENTION')) }}"}, "test_created_at": null, "description": "Expect the columns in a model to contain a given list.", "result": {"result_description": null, "result_query": "with relation_columns as (\n\n        \n        select cast('CUSTOMER_ID' as TEXT) as relation_column\n        union all\n        \n        select cast('FIRST_NAME' as TEXT) as relation_column\n        union all\n        \n        select cast('LAST_NAME' as TEXT) as relation_column\n        union all\n        \n        select cast('CUSTOMER_LIFETIME_VALUE' as TEXT) as relation_column\n        union all\n        \n        select cast('DAYS_SINCE_LAST_ORDER' as TEXT) as relation_column\n        union all\n        \n        select cast('URGENCY' as TEXT) as relation_column\n        \n        \n    ),\n    input_columns as (\n\n        \n        select cast('CUSTOMER_ID' as TEXT) as input_column\n        union all\n        \n        select cast('FIRST_NAME' as TEXT) as input_column\n        union all\n        \n        select cast('LAST_NAME' as TEXT) as input_column\n        union all\n        \n        select cast('CUSTOMER_LIFETIME_VALUE' as TEXT) as input_column\n        union all\n        \n        select cast('DAYS_SINCE_LAST_ORDER' as TEXT) as input_column\n        union all\n        \n        select cast('URGENCY' as TEXT) as input_column\n        \n        \n    )\n    select *\n    from\n        input_columns i\n        left join\n        relation_columns r on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        r.relation_column is null"}, "configuration": {"test_name": "expect_table_columns_to_contain_set", "test_params": {"column_list": ["customer_id", "first_name", "last_name", "customer_lifetime_value", "days_since_last_order", "urgency"], "transform": "upper", "model": "{{ get_where_subquery(ref('R_CUSTOMER_RETENTION')) }}"}}}, "test_results": {"display_name": "expect_table_columns_to_contain_set", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.genesis.FACT_PAYMENTS": [{"metadata": {"test_unique_id": "test.genesis.no_card_payments_under_1", "elementary_unique_id": "test.genesis.no_card_payments_under_1.None.generic", "database_name": "GENESIS_UAT", "schema_name": "PBL_GENESIS", "table_name": "FACT_PAYMENTS", "column_name": null, "test_name": "no_card_payments_under_1", "test_display_name": "No Card Payments Under 1", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "warn", "model_unique_id": "model.genesis.FACT_PAYMENTS", "table_unique_id": "genesis_uat.pbl_genesis.fact_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "-- configuration directly in sql is done like this\n\n-- Singular \"business-like\" example test to verify there are no credit card payments with amount less than 1.00 EUR\n\nselect *\nfrom GENESIS_UAT.PBL_GENESIS.FACT_PAYMENTS\nwhere payment_method = 'credit_card'\nand amount < 1", "test_params": {}, "test_created_at": null, "description": null, "result": {"result_description": "Got 55 results, configured to warn if != 0", "result_query": "-- configuration directly in sql is done like this\n\n-- Singular \"business-like\" example test to verify there are no credit card payments with amount less than 1.00 EUR\n\nselect *\nfrom GENESIS_UAT.PBL_GENESIS.FACT_PAYMENTS\nwhere payment_method = 'credit_card'\nand amount < 1"}, "configuration": {"test_name": "no_card_payments_under_1", "test_params": {}}}, "test_results": {"display_name": "no_card_payments_under_1", "results_sample": [{"payment_id": 1.0, "order_id": 1.0, "payment_method": "credit_card", "amount": 0.1, "insert_timestamp": "2023-10-15T13:12:27.507000-07:00", "record_valid": true}, {"payment_id": 2.0, "order_id": 2.0, "payment_method": "credit_card", "amount": 0.2, "insert_timestamp": "2023-10-15T13:12:27.507000-07:00", "record_valid": true}, {"payment_id": 6.0, "order_id": 6.0, "payment_method": "credit_card", "amount": 0.06, "insert_timestamp": "2023-10-15T13:12:27.507000-07:00", "record_valid": true}, {"payment_id": 7.0, "order_id": 7.0, "payment_method": "credit_card", "amount": 0.16, "insert_timestamp": "2023-10-15T13:12:27.507000-07:00", "record_valid": true}, {"payment_id": 8.0, "order_id": 8.0, "payment_method": "credit_card", "amount": 0.23, "insert_timestamp": "2023-10-15T13:12:27.507000-07:00", "record_valid": true}], "error_message": "Got 55 results, configured to warn if != 0", "failed_rows_count": 55}}], "model.genesis.TL_ORDERS": [{"metadata": {"test_unique_id": "test.genesis.relationships_TL_ORDERS_customer_id__customer_id__ref_TL_CUSTOMERS_.9bf88f4013", "elementary_unique_id": "test.genesis.relationships_TL_ORDERS_customer_id__customer_id__ref_TL_CUSTOMERS_.9bf88f4013.customer_id.generic", "database_name": "GENESIS_UAT", "schema_name": "CMP_GENESIS", "table_name": "TL_ORDERS", "column_name": "customer_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.TL_ORDERS", "table_unique_id": "genesis_uat.cmp_genesis.tl_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select customer_id as from_field\n    from GENESIS_UAT.CMP_GENESIS.TL_ORDERS\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from GENESIS_UAT.CMP_GENESIS.TL_CUSTOMERS\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('TL_CUSTOMERS')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('TL_ORDERS')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select customer_id as from_field\n    from GENESIS_UAT.CMP_GENESIS.TL_ORDERS\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from GENESIS_UAT.CMP_GENESIS.TL_CUSTOMERS\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('TL_CUSTOMERS')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('TL_ORDERS')) }}"}}}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.genesis.TL_PAYMENTS": [{"metadata": {"test_unique_id": "test.genesis.relationships_TL_PAYMENTS_order_id__order_id__ref_TL_ORDERS_.6b8b67fc9c", "elementary_unique_id": "test.genesis.relationships_TL_PAYMENTS_order_id__order_id__ref_TL_ORDERS_.6b8b67fc9c.order_id.generic", "database_name": "GENESIS_UAT", "schema_name": "CMP_GENESIS", "table_name": "TL_PAYMENTS", "column_name": "order_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.TL_PAYMENTS", "table_unique_id": "genesis_uat.cmp_genesis.tl_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select order_id as from_field\n    from GENESIS_UAT.CMP_GENESIS.TL_PAYMENTS\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from GENESIS_UAT.CMP_GENESIS.TL_ORDERS\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('TL_ORDERS')", "field": "order_id", "column_name": "order_id", "model": "{{ get_where_subquery(ref('TL_PAYMENTS')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select order_id as from_field\n    from GENESIS_UAT.CMP_GENESIS.TL_PAYMENTS\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from GENESIS_UAT.CMP_GENESIS.TL_ORDERS\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('TL_ORDERS')", "field": "order_id", "column_name": "order_id", "model": "{{ get_where_subquery(ref('TL_PAYMENTS')) }}"}}}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}]}, "test_results_totals": {"model.genesis.SL_ORDERS": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.genesis.SL_CUSTOMERS": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.genesis.SL_PAYMENTS": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.genesis.R_CUSTOMER_RETENTION": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.FACT_PAYMENTS": {"errors": 0, "warnings": 1, "passed": 0, "failures": 0}, "model.genesis.TL_ORDERS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.TL_PAYMENTS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}}, "test_runs": {"model.genesis.SL_ORDERS": [{"metadata": {"test_unique_id": "test.genesis.accepted_values_SL_ORDERS_status__completed__returned__return_pending__placed__shipped.3cde5df6a7", "elementary_unique_id": "test.genesis.accepted_values_SL_ORDERS_status__completed__returned__return_pending__placed__shipped.3cde5df6a7.status.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_ORDERS", "column_name": "status", "test_name": "accepted_values", "test_display_name": "Accepted Values", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_ORDERS", "table_unique_id": "genesis_uat.stg_genesis.sl_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from GENESIS_UAT.STG_GENESIS.SL_ORDERS\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','returned','return_pending','placed','shipped'\n)", "test_params": {"values": ["completed", "returned", "return_pending", "placed", "shipped"], "column_name": "status", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from GENESIS_UAT.STG_GENESIS.SL_ORDERS\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','returned','return_pending','placed','shipped'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["completed", "returned", "return_pending", "placed", "shipped"], "column_name": "status", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.genesis.not_null_SL_ORDERS_order_id.d3391a078c", "elementary_unique_id": "test.genesis.not_null_SL_ORDERS_order_id.d3391a078c.order_id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_ORDERS", "column_name": "order_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_ORDERS", "table_unique_id": "genesis_uat.stg_genesis.sl_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select order_id\nfrom GENESIS_UAT.STG_GENESIS.SL_ORDERS\nwhere order_id is null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select order_id\nfrom GENESIS_UAT.STG_GENESIS.SL_ORDERS\nwhere order_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.genesis.unique_SL_ORDERS_order_id.456ac8c22b", "elementary_unique_id": "test.genesis.unique_SL_ORDERS_order_id.456ac8c22b.order_id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_ORDERS", "column_name": "order_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_ORDERS", "table_unique_id": "genesis_uat.stg_genesis.sl_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_ORDERS\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_ORDERS\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('SL_ORDERS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.genesis.SL_CUSTOMERS": [{"metadata": {"test_unique_id": "test.genesis.dbt_expectations_expect_column_value_lengths_to_be_between_SL_CUSTOMERS_last_name__2.1cbdd9b0f3", "elementary_unique_id": "test.genesis.dbt_expectations_expect_column_value_lengths_to_be_between_SL_CUSTOMERS_last_name__2.1cbdd9b0f3.last_name.expectation", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "column_name": "last_name", "test_name": "expect_column_value_lengths_to_be_between", "test_display_name": "Expect Column Value Lengths To Be Between", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_CUSTOMERS", "table_unique_id": "genesis_uat.stg_genesis.sl_customers", "test_type": "dbt_test", "test_sub_type": "expectation", "test_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        last_name\n    ) >= 2\n)\n as expression\n\n\n    from GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors", "test_params": {"min_value": 2, "column_name": "last_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}, "test_created_at": null, "description": "Expect column entries to be strings with length between a min_value value and a max_value value (inclusive).", "result": {"result_description": null, "result_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and length(\n        last_name\n    ) >= 2\n)\n as expression\n\n\n    from GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "expect_column_value_lengths_to_be_between", "test_params": {"min_value": 2, "column_name": "last_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.genesis.not_null_SL_CUSTOMERS_first_name.4cadfb01b0", "elementary_unique_id": "test.genesis.not_null_SL_CUSTOMERS_first_name.4cadfb01b0.first_name.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "column_name": "first_name", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_CUSTOMERS", "table_unique_id": "genesis_uat.stg_genesis.sl_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select first_name\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere first_name is null", "test_params": {"column_name": "first_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select first_name\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere first_name is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "first_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.genesis.not_null_SL_CUSTOMERS_id.0d1c8aa820", "elementary_unique_id": "test.genesis.not_null_SL_CUSTOMERS_id.0d1c8aa820.id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_CUSTOMERS", "table_unique_id": "genesis_uat.stg_genesis.sl_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.genesis.not_null_SL_CUSTOMERS_last_name.16dabb7683", "elementary_unique_id": "test.genesis.not_null_SL_CUSTOMERS_last_name.16dabb7683.last_name.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "column_name": "last_name", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_CUSTOMERS", "table_unique_id": "genesis_uat.stg_genesis.sl_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select last_name\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere last_name is null", "test_params": {"column_name": "last_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select last_name\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere last_name is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "last_name", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.genesis.unique_SL_CUSTOMERS_id.71b924c53f", "elementary_unique_id": "test.genesis.unique_SL_CUSTOMERS_id.71b924c53f.id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_CUSTOMERS", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_CUSTOMERS", "table_unique_id": "genesis_uat.stg_genesis.sl_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere id is not null\ngroup by id\nhaving count(*) > 1", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_CUSTOMERS\nwhere id is not null\ngroup by id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_CUSTOMERS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.genesis.SL_PAYMENTS": [{"metadata": {"test_unique_id": "test.genesis.dbt_expectations_expect_column_values_to_be_between_SL_PAYMENTS_amount__0.8941461226", "elementary_unique_id": "test.genesis.dbt_expectations_expect_column_values_to_be_between_SL_PAYMENTS_amount__0.8941461226.amount.expectation", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_PAYMENTS", "column_name": "amount", "test_name": "expect_column_values_to_be_between", "test_display_name": "Expect Column Values To Be Between", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_PAYMENTS", "table_unique_id": "genesis_uat.stg_genesis.sl_payments", "test_type": "dbt_test", "test_sub_type": "expectation", "test_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and amount >= 0\n)\n as expression\n\n\n    from GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors", "test_params": {"min_value": 0, "column_name": "amount", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}, "test_created_at": null, "description": "Expect each column value to be between two values.", "result": {"result_description": null, "result_query": "with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and amount >= 0\n)\n as expression\n\n\n    from GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "expect_column_values_to_be_between", "test_params": {"min_value": 0, "column_name": "amount", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.genesis.not_null_SL_PAYMENTS_id.6c9af60233", "elementary_unique_id": "test.genesis.not_null_SL_PAYMENTS_id.6c9af60233.id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_PAYMENTS", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_PAYMENTS", "table_unique_id": "genesis_uat.stg_genesis.sl_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.genesis.unique_SL_PAYMENTS_id.d72e101596", "elementary_unique_id": "test.genesis.unique_SL_PAYMENTS_id.d72e101596.id.generic", "database_name": "GENESIS_UAT", "schema_name": "STG_GENESIS", "table_name": "SL_PAYMENTS", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.SL_PAYMENTS", "table_unique_id": "genesis_uat.stg_genesis.sl_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\nwhere id is not null\ngroup by id\nhaving count(*) > 1", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom GENESIS_UAT.STG_GENESIS.SL_PAYMENTS\nwhere id is not null\ngroup by id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('SL_PAYMENTS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.genesis.R_CUSTOMER_RETENTION": [{"metadata": {"test_unique_id": "test.genesis.dbt_expectations_expect_table_columns_to_contain_set_R_CUSTOMER_RETENTION_customer_id__first_name__last_name__customer_lifetime_value__days_since_last_order__urgency__upper.dd8fe52e54", "elementary_unique_id": "test.genesis.dbt_expectations_expect_table_columns_to_contain_set_R_CUSTOMER_RETENTION_customer_id__first_name__last_name__customer_lifetime_value__days_since_last_order__urgency__upper.dd8fe52e54.None.expectation", "database_name": "GENESIS_UAT", "schema_name": "PBL_GENESIS", "table_name": "R_CUSTOMER_RETENTION", "column_name": null, "test_name": "expect_table_columns_to_contain_set", "test_display_name": "Expect Table Columns To Contain Set", "latest_run_time": "2023-10-15T22:12:53+02:00", "latest_run_time_utc": "2023-10-15T20:12:53+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.R_CUSTOMER_RETENTION", "table_unique_id": "genesis_uat.pbl_genesis.r_customer_retention", "test_type": "dbt_test", "test_sub_type": "expectation", "test_query": "with relation_columns as (\n\n        \n        select cast('CUSTOMER_ID' as TEXT) as relation_column\n        union all\n        \n        select cast('FIRST_NAME' as TEXT) as relation_column\n        union all\n        \n        select cast('LAST_NAME' as TEXT) as relation_column\n        union all\n        \n        select cast('CUSTOMER_LIFETIME_VALUE' as TEXT) as relation_column\n        union all\n        \n        select cast('DAYS_SINCE_LAST_ORDER' as TEXT) as relation_column\n        union all\n        \n        select cast('URGENCY' as TEXT) as relation_column\n        \n        \n    ),\n    input_columns as (\n\n        \n        select cast('CUSTOMER_ID' as TEXT) as input_column\n        union all\n        \n        select cast('FIRST_NAME' as TEXT) as input_column\n        union all\n        \n        select cast('LAST_NAME' as TEXT) as input_column\n        union all\n        \n        select cast('CUSTOMER_LIFETIME_VALUE' as TEXT) as input_column\n        union all\n        \n        select cast('DAYS_SINCE_LAST_ORDER' as TEXT) as input_column\n        union all\n        \n        select cast('URGENCY' as TEXT) as input_column\n        \n        \n    )\n    select *\n    from\n        input_columns i\n        left join\n        relation_columns r on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        r.relation_column is null", "test_params": {"column_list": ["customer_id", "first_name", "last_name", "customer_lifetime_value", "days_since_last_order", "urgency"], "transform": "upper", "model": "{{ get_where_subquery(ref('R_CUSTOMER_RETENTION')) }}"}, "test_created_at": null, "description": "Expect the columns in a model to contain a given list.", "result": {"result_description": null, "result_query": "with relation_columns as (\n\n        \n        select cast('CUSTOMER_ID' as TEXT) as relation_column\n        union all\n        \n        select cast('FIRST_NAME' as TEXT) as relation_column\n        union all\n        \n        select cast('LAST_NAME' as TEXT) as relation_column\n        union all\n        \n        select cast('CUSTOMER_LIFETIME_VALUE' as TEXT) as relation_column\n        union all\n        \n        select cast('DAYS_SINCE_LAST_ORDER' as TEXT) as relation_column\n        union all\n        \n        select cast('URGENCY' as TEXT) as relation_column\n        \n        \n    ),\n    input_columns as (\n\n        \n        select cast('CUSTOMER_ID' as TEXT) as input_column\n        union all\n        \n        select cast('FIRST_NAME' as TEXT) as input_column\n        union all\n        \n        select cast('LAST_NAME' as TEXT) as input_column\n        union all\n        \n        select cast('CUSTOMER_LIFETIME_VALUE' as TEXT) as input_column\n        union all\n        \n        select cast('DAYS_SINCE_LAST_ORDER' as TEXT) as input_column\n        union all\n        \n        select cast('URGENCY' as TEXT) as input_column\n        \n        \n    )\n    select *\n    from\n        input_columns i\n        left join\n        relation_columns r on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        r.relation_column is null"}, "configuration": {"test_name": "expect_table_columns_to_contain_set", "test_params": {"column_list": ["customer_id", "first_name", "last_name", "customer_lifetime_value", "days_since_last_order", "urgency"], "transform": "upper", "model": "{{ get_where_subquery(ref('R_CUSTOMER_RETENTION')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:53+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.genesis.FACT_PAYMENTS": [{"metadata": {"test_unique_id": "test.genesis.no_card_payments_under_1", "elementary_unique_id": "test.genesis.no_card_payments_under_1.None.generic", "database_name": "GENESIS_UAT", "schema_name": "PBL_GENESIS", "table_name": "FACT_PAYMENTS", "column_name": null, "test_name": "no_card_payments_under_1", "test_display_name": "No Card Payments Under 1", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "warn", "model_unique_id": "model.genesis.FACT_PAYMENTS", "table_unique_id": "genesis_uat.pbl_genesis.fact_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "-- configuration directly in sql is done like this\n\n-- Singular \"business-like\" example test to verify there are no credit card payments with amount less than 1.00 EUR\n\nselect *\nfrom GENESIS_UAT.PBL_GENESIS.FACT_PAYMENTS\nwhere payment_method = 'credit_card'\nand amount < 1", "test_params": {}, "test_created_at": null, "description": null, "result": {"result_description": "Got 55 results, configured to warn if != 0", "result_query": "-- configuration directly in sql is done like this\n\n-- Singular \"business-like\" example test to verify there are no credit card payments with amount less than 1.00 EUR\n\nselect *\nfrom GENESIS_UAT.PBL_GENESIS.FACT_PAYMENTS\nwhere payment_method = 'credit_card'\nand amount < 1"}, "configuration": {"test_name": "no_card_payments_under_1", "test_params": {}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 1, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": 55, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "warn"}], "description": "There were no failures, no errors and 1 warnings on the last 1 test runs."}}], "model.genesis.TL_ORDERS": [{"metadata": {"test_unique_id": "test.genesis.relationships_TL_ORDERS_customer_id__customer_id__ref_TL_CUSTOMERS_.9bf88f4013", "elementary_unique_id": "test.genesis.relationships_TL_ORDERS_customer_id__customer_id__ref_TL_CUSTOMERS_.9bf88f4013.customer_id.generic", "database_name": "GENESIS_UAT", "schema_name": "CMP_GENESIS", "table_name": "TL_ORDERS", "column_name": "customer_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.TL_ORDERS", "table_unique_id": "genesis_uat.cmp_genesis.tl_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select customer_id as from_field\n    from GENESIS_UAT.CMP_GENESIS.TL_ORDERS\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from GENESIS_UAT.CMP_GENESIS.TL_CUSTOMERS\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('TL_CUSTOMERS')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('TL_ORDERS')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select customer_id as from_field\n    from GENESIS_UAT.CMP_GENESIS.TL_ORDERS\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from GENESIS_UAT.CMP_GENESIS.TL_CUSTOMERS\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('TL_CUSTOMERS')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('TL_ORDERS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.genesis.TL_PAYMENTS": [{"metadata": {"test_unique_id": "test.genesis.relationships_TL_PAYMENTS_order_id__order_id__ref_TL_ORDERS_.6b8b67fc9c", "elementary_unique_id": "test.genesis.relationships_TL_PAYMENTS_order_id__order_id__ref_TL_ORDERS_.6b8b67fc9c.order_id.generic", "database_name": "GENESIS_UAT", "schema_name": "CMP_GENESIS", "table_name": "TL_PAYMENTS", "column_name": "order_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-10-15T22:12:48+02:00", "latest_run_time_utc": "2023-10-15T20:12:48+00:00", "latest_run_status": "pass", "model_unique_id": "model.genesis.TL_PAYMENTS", "table_unique_id": "genesis_uat.cmp_genesis.tl_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select order_id as from_field\n    from GENESIS_UAT.CMP_GENESIS.TL_PAYMENTS\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from GENESIS_UAT.CMP_GENESIS.TL_ORDERS\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('TL_ORDERS')", "field": "order_id", "column_name": "order_id", "model": "{{ get_where_subquery(ref('TL_PAYMENTS')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select order_id as from_field\n    from GENESIS_UAT.CMP_GENESIS.TL_PAYMENTS\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from GENESIS_UAT.CMP_GENESIS.TL_ORDERS\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('TL_ORDERS')", "field": "order_id", "column_name": "order_id", "model": "{{ get_where_subquery(ref('TL_PAYMENTS')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-10-15T20:12:48+00:00", "id": "46b25541-8c8f-46ca-82b5-639459483b92", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}]}, "test_runs_totals": {"model.genesis.SL_ORDERS": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.genesis.SL_CUSTOMERS": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.genesis.SL_PAYMENTS": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.genesis.R_CUSTOMER_RETENTION": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.FACT_PAYMENTS": {"errors": 0, "warnings": 1, "passed": 0, "failures": 0}, "model.genesis.TL_ORDERS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.TL_PAYMENTS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}}, "coverages": {"model.genesis.FACT_PAYMENTS": {"table_tests": 1, "column_tests": 0}, "model.genesis.TL_ORDERS": {"table_tests": 0, "column_tests": 1}, "model.genesis.R_CUSTOMER_RETENTION": {"table_tests": 1, "column_tests": 0}, "model.genesis.SL_CUSTOMERS": {"table_tests": 0, "column_tests": 5}, "model.genesis.SL_ORDERS": {"table_tests": 0, "column_tests": 3}, "model.genesis.SL_PAYMENTS": {"table_tests": 0, "column_tests": 3}, "model.genesis.TL_PAYMENTS": {"table_tests": 0, "column_tests": 1}}, "model_runs": [{"unique_id": "model.genesis.SL_ORDERS", "schema": "STG_GENESIS", "name": "SL_ORDERS", "status": "success", "last_exec_time": 7.0, "median_exec_time": 7.0, "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "time_utc": "2023-10-15T20:12:33+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 7.0}]}, {"unique_id": "model.genesis.SL_PAYMENTS", "schema": "STG_GENESIS", "name": "SL_PAYMENTS", "status": "success", "last_exec_time": 7.1, "median_exec_time": 7.1, "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "time_utc": "2023-10-15T20:12:33+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 7.1}]}, {"unique_id": "model.genesis.SL_CUSTOMERS", "schema": "STG_GENESIS", "name": "SL_CUSTOMERS", "status": "success", "last_exec_time": 7.2, "median_exec_time": 7.2, "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "time_utc": "2023-10-15T20:12:33+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 7.2}]}, {"unique_id": "model.genesis.TL_PAYMENTS", "schema": "CMP_GENESIS", "name": "TL_PAYMENTS", "status": "success", "last_exec_time": 2.7, "median_exec_time": 2.7, "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "time_utc": "2023-10-15T20:12:33+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.7}]}, {"unique_id": "model.genesis.TL_CUSTOMERS", "schema": "CMP_GENESIS", "name": "TL_CUSTOMERS", "status": "success", "last_exec_time": 2.8, "median_exec_time": 2.8, "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "time_utc": "2023-10-15T20:12:33+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.8}]}, {"unique_id": "model.genesis.TL_ORDERS", "schema": "CMP_GENESIS", "name": "TL_ORDERS", "status": "success", "last_exec_time": 5.4, "median_exec_time": 5.4, "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "time_utc": "2023-10-15T20:12:33+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 5.4}]}, {"unique_id": "model.genesis.FACT_PAYMENTS", "schema": "PBL_GENESIS", "name": "FACT_PAYMENTS", "status": "success", "last_exec_time": 3.1, "median_exec_time": 3.1, "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "time_utc": "2023-10-15T20:12:33+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.1}]}, {"unique_id": "model.genesis.DIM_CUSTOMERS", "schema": "PBL_GENESIS", "name": "DIM_CUSTOMERS", "status": "success", "last_exec_time": 3.1, "median_exec_time": 3.1, "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "time_utc": "2023-10-15T20:12:33+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.1}]}, {"unique_id": "model.genesis.R_CUSTOMER_RETENTION", "schema": "PBL_GENESIS", "name": "R_CUSTOMER_RETENTION", "status": "success", "last_exec_time": 2.4, "median_exec_time": 2.4, "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "time_utc": "2023-10-15T20:12:33+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 2.4}]}], "model_runs_totals": {"model.genesis.SL_ORDERS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.SL_PAYMENTS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.SL_CUSTOMERS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.TL_PAYMENTS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.TL_CUSTOMERS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.TL_ORDERS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.FACT_PAYMENTS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.DIM_CUSTOMERS": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.genesis.R_CUSTOMER_RETENTION": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}}, "filters": {"test_results": [{"name": "warnings", "display_name": "Warnings", "model_unique_ids": ["model.genesis.FACT_PAYMENTS"]}, {"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.genesis.SL_ORDERS", "model.genesis.TL_ORDERS", "model.genesis.TL_PAYMENTS", "model.genesis.SL_PAYMENTS", "model.genesis.R_CUSTOMER_RETENTION", "model.genesis.SL_CUSTOMERS"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["source.genesis.Jaffle_shop.VW_RAW_PAYMENTS", "model.genesis.DIM_CUSTOMERS", "model.genesis.TL_CUSTOMERS", "source.genesis.Jaffle_shop.VW_RAW_ORDERS", "source.genesis.Jaffle_shop.VW_RAW_CUSTOMERS"]}], "test_runs": [{"name": "warnings", "display_name": "Warnings", "model_unique_ids": ["model.genesis.FACT_PAYMENTS"]}, {"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.genesis.SL_ORDERS", "model.genesis.TL_ORDERS", "model.genesis.TL_PAYMENTS", "model.genesis.SL_PAYMENTS", "model.genesis.R_CUSTOMER_RETENTION", "model.genesis.SL_CUSTOMERS"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["source.genesis.Jaffle_shop.VW_RAW_PAYMENTS", "model.genesis.DIM_CUSTOMERS", "model.genesis.TL_CUSTOMERS", "source.genesis.Jaffle_shop.VW_RAW_ORDERS", "source.genesis.Jaffle_shop.VW_RAW_CUSTOMERS"]}], "model_runs": [{"name": "success", "display_name": "Successful Runs", "model_unique_ids": ["model.genesis.R_CUSTOMER_RETENTION", "model.genesis.DIM_CUSTOMERS", "model.genesis.TL_ORDERS", "model.genesis.TL_PAYMENTS", "model.genesis.SL_PAYMENTS", "model.genesis.FACT_PAYMENTS", "model.genesis.SL_ORDERS", "model.genesis.TL_CUSTOMERS", "model.genesis.SL_CUSTOMERS"]}]}, "lineage": {"nodes": [{"id": "model.genesis.TL_CUSTOMERS", "type": "model"}, {"id": "model.genesis.TL_PAYMENTS", "type": "model"}, {"id": "model.genesis.DIM_CUSTOMERS", "type": "model"}, {"id": "model.genesis.R_CUSTOMER_RETENTION", "type": "model"}, {"id": "model.genesis.FACT_PAYMENTS", "type": "model"}, {"id": "model.genesis.SL_CUSTOMERS", "type": "model"}, {"id": "model.genesis.SL_ORDERS", "type": "model"}, {"id": "model.genesis.SL_PAYMENTS", "type": "model"}, {"id": "model.genesis.TL_ORDERS", "type": "model"}, {"id": "source.genesis.Jaffle_shop.VW_RAW_CUSTOMERS", "type": "source"}, {"id": "source.genesis.Jaffle_shop.VW_RAW_ORDERS", "type": "source"}, {"id": "source.genesis.Jaffle_shop.VW_RAW_PAYMENTS", "type": "source"}], "edges": [["model.genesis.TL_CUSTOMERS", "model.genesis.SL_CUSTOMERS"], ["model.genesis.TL_CUSTOMERS", "model.genesis.SL_ORDERS"], ["model.genesis.TL_CUSTOMERS", "model.genesis.SL_PAYMENTS"], ["model.genesis.SL_CUSTOMERS", "source.genesis.Jaffle_shop.VW_RAW_CUSTOMERS"], ["model.genesis.SL_ORDERS", "source.genesis.Jaffle_shop.VW_RAW_ORDERS"], ["model.genesis.SL_PAYMENTS", "source.genesis.Jaffle_shop.VW_RAW_PAYMENTS"], ["model.genesis.TL_PAYMENTS", "model.genesis.SL_PAYMENTS"], ["model.genesis.DIM_CUSTOMERS", "model.genesis.TL_CUSTOMERS"], ["model.genesis.R_CUSTOMER_RETENTION", "model.genesis.DIM_CUSTOMERS"], ["model.genesis.FACT_PAYMENTS", "model.genesis.TL_PAYMENTS"], ["model.genesis.TL_ORDERS", "model.genesis.SL_ORDERS"], ["model.genesis.TL_ORDERS", "model.genesis.SL_PAYMENTS"]]}, "invocations": [{"invocation_id": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "detected_at": null, "command": "run", "selected": "", "full_refresh": false, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}], "resources_latest_invocation": {"model.elementary.test_result_rows": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.genesis.TL_ORDERS": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_artifacts_hashes": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.model_run_results": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.snapshot_run_results": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.alerts_dbt_source_freshness": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_models": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.metadata": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.alerts_dbt_tests": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_invocations": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_source_freshness_results": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.genesis.DIM_CUSTOMERS": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_run_results": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.genesis.R_CUSTOMER_RETENTION": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.genesis.FACT_PAYMENTS": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_seeds": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_sources": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.alerts_dbt_models": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.elementary_test_results": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.job_run_results": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_columns": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.genesis.SL_PAYMENTS": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.genesis.SL_ORDERS": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_tests": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.genesis.TL_CUSTOMERS": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.monitors_runs": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.enriched_exposures": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.alerts_schema_changes": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.data_monitoring_metrics": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.anomaly_threshold_sensitivity": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.metrics_anomaly_score": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_metrics": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.genesis.TL_PAYMENTS": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.elementary_exposures": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.genesis.SL_CUSTOMERS": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.alerts_anomaly_detection": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_snapshots": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.schema_columns_snapshot": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40", "model.elementary.dbt_exposures": "e74db91d-3bd0-4a8d-832d-8e5d2cf11d40"}, "invocations_job_identification": {}, "env": {"project_name": "genesis", "env": "dev", "warehouse_type": "snowflake"}, "tracking": {"posthog_api_key": "phc_56XBEzZmh02mGkadqLiYW51eECyYKWPyecVwkGdGUfg", "report_generator_anonymous_user_id": "3466f456-487b-4c97-a7d2-e3f4a7ffc659", "anonymous_warehouse_id": "391463aa9004ee0b1408565f02ee9f701a0f81905b5de72cf5c298ecedde64fe"}}